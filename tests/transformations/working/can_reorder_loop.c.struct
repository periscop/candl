[33mORIGINAL SCOP:[00m

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 2 0 0 0 0

# Parameters are not provided
0


# Number of statements
3

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
0 2 0 0 0 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
1 3 1 0 0 0
# e/i| c1 |  1  
   0   -1    0    ## c1 == 0

# ----------------------------------------------  1.3 Access
WRITE
2 4 2 0 0 0
# e/i| Arr  [1]|  1  
   0   -1    0    1    ## Arr == a
   0    0   -1    0    ## [1] == 0

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
0
# Statement body expression
a[0] = 0;
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
3

# ----------------------------------------------  2.1 Domain
DOMAIN
2 3 1 0 0 0
# e/i|  i |  1  
   1    1   -1    ## i-1 >= 0
   1   -1    5    ## -i+5 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
3 6 3 1 0 0
# e/i| c1   c2   c3 |  i |  1  
   0   -1    0    0    0    1    ## c1 == 1
   0    0   -1    0    1    0    ## c2 == i
   0    0    0   -1    0    0    ## c3 == 0

# ----------------------------------------------  2.3 Access
WRITE
2 5 2 1 0 0
# e/i| Arr  [1]|  i |  1  
   0   -1    0    0    1    ## Arr == a
   0    0   -1    1    0    ## [1] == i

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
a[i] = 0;
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
4

# ----------------------------------------------  3.1 Domain
DOMAIN
2 3 1 0 0 0
# e/i|  i |  1  
   1    1   -1    ## i-1 >= 0
   1   -1    5    ## -i+5 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
3 6 3 1 0 0
# e/i| c1   c2   c3 |  i |  1  
   0   -1    0    0    0    1    ## c1 == 1
   0    0   -1    0    1    0    ## c2 == i
   0    0    0   -1    0    1    ## c3 == 1

# ----------------------------------------------  3.3 Access
WRITE
2 5 2 1 0 0
# e/i| Arr  [1]|  i |  1  
   0   -1    0    0    3    ## Arr == b
   0    0   -1    1   -1    ## [1] == i-1

READ
2 5 2 1 0 0
# e/i| Arr  [1]|  i |  1  
   0   -1    0    0    1    ## Arr == a
   0    0   -1    1   -1    ## [1] == i-1

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
b[i-1] = a[i-1];
</body>

# =============================================== Extensions
<dependence>
# Number of dependences
2
# Description of dependence 1
# type
RAW #(flow)
# From source statement id
0
# To target statement id
2
# Depth 
0
# From source access ref
0
# To target access ref
1
# Dependence domain
UNDEFINED
8 7 2 3 0 0
# e/i| c1   c2 | i1   i2   i3 |  1  
   1    0    0    1    0    0   -1    ## i1-1 >= 0
   1    0    0   -1    0    0    5    ## -i1+5 >= 0
   0   -1    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    0    0    0    ## c2 == 0
   0    0    0    0    1    0   -1    ## i2-1 == 0
   0    0    0   -1    0    1    1    ## -i1+i3+1 == 0
   0   -1    0    0    1    0    0    ## c1 == i2
   0    0   -1    0    0    1    0    ## c2 == i3
# Description of dependence 2
# type
RAW #(flow)
# From source statement id
1
# To target statement id
2
# Depth 
1
# From source access ref
0
# To target access ref
1
# Dependence domain
UNDEFINED
11 8 3 3 0 0
# e/i| c1   c2   c3 | i1   i2   i3 |  1  
   1    1    0    0    0    0    0   -1    ## c1-1 >= 0
   1   -1    0    0    0    0    0    5    ## -c1+5 >= 0
   1    0    0    0    1    0    0   -1    ## i1-1 >= 0
   1    0    0    0   -1    0    0    5    ## -i1+5 >= 0
   0    0   -1    0    0    0    0    1    ## c2 == 1
   0    1    0   -1    0    0    0    0    ## c1-c3 == 0
   0    0    0    0    0    1    0   -1    ## i2-1 == 0
   0    0    0    0   -1    0    1    1    ## -i1+i3+1 == 0
   0    0   -1    0    0    1    0    0    ## c2 == i2
   0    0    0   -1    0    0    1    0    ## c3 == i3
   1   -1    0    0    1    0    0    0    ## -c1+i1 >= 0
</dependence>

<scatnames>
b0 i b1
</scatnames>

<arrays>
# Number of arrays
3
# Mapping array-identifiers/array-names
1 a
2 i
3 b
</arrays>

<coordinates>
# File name
./transformations/working/can_reorder_loop.c
# Starting line and column
2 0
# Ending line and column
10 0
# Indentation
0
</coordinates>

<clay>
  reorder([1], [1,0]);
</clay>

</OpenScop>


[33mTRANSFORMED SCOP:[00m

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 2 0 0 0 0

# Parameters are not provided
0


# Number of statements
3

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
0 2 0 0 0 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
1 3 1 0 0 0
# e/i| c1 |  1  
   0   -1    0    ## c1 == 0

# ----------------------------------------------  1.3 Access
WRITE
2 4 2 0 0 0
# e/i| Arr  [1]|  1  
   0   -1    0    1    ## Arr == a
   0    0   -1    0    ## [1] == 0

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
0
# Statement body expression
a[0] = 0;
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
3

# ----------------------------------------------  2.1 Domain
DOMAIN
2 3 1 0 0 0
# e/i|  i |  1  
   1    1   -1    ## i-1 >= 0
   1   -1    5    ## -i+5 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
3 6 3 1 0 0
# e/i| c1   c2   c3 |  i |  1  
   0   -1    0    0    0    1    ## c1 == 1
   0    0   -1    0    1    0    ## c2 == i
   0    0    0   -1    0    1    ## c3 == 1

# ----------------------------------------------  2.3 Access
WRITE
2 5 2 1 0 0
# e/i| Arr  [1]|  i |  1  
   0   -1    0    0    1    ## Arr == a
   0    0   -1    1    0    ## [1] == i

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
a[i] = 0;
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
4

# ----------------------------------------------  3.1 Domain
DOMAIN
2 3 1 0 0 0
# e/i|  i |  1  
   1    1   -1    ## i-1 >= 0
   1   -1    5    ## -i+5 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
3 6 3 1 0 0
# e/i| c1   c2   c3 |  i |  1  
   0   -1    0    0    0    1    ## c1 == 1
   0    0   -1    0    1    0    ## c2 == i
   0    0    0   -1    0    0    ## c3 == 0

# ----------------------------------------------  3.3 Access
WRITE
2 5 2 1 0 0
# e/i| Arr  [1]|  i |  1  
   0   -1    0    0    3    ## Arr == b
   0    0   -1    1   -1    ## [1] == i-1

READ
2 5 2 1 0 0
# e/i| Arr  [1]|  i |  1  
   0   -1    0    0    1    ## Arr == a
   0    0   -1    1   -1    ## [1] == i-1

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
b[i-1] = a[i-1];
</body>

# =============================================== Extensions
<scatnames>
b0 i b1
</scatnames>

<arrays>
# Number of arrays
3
# Mapping array-identifiers/array-names
1 a
2 i
3 b
</arrays>

<coordinates>
# File name
./transformations/working/can_reorder_loop.c
# Starting line and column
2 0
# Ending line and column
10 0
# Indentation
0
</coordinates>

</OpenScop>


[33mDEPENDENCES GRAPH:[00m
digraph G {
# Data Dependence Graph
  S0 -> S2 [label=" RAW depth 0, ref 0->1 "];
  S1 -> S2 [label=" RAW depth 1, ref 0->1 "];
}


[33mVIOLATIONS GRAPH:[00m
digraph G {
# Legality Violation Graph
# Congratulations: the transformation is legal !
}
