[33mORIGINAL SCOP:[00m

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 3 0 0 0 1

# Parameters are provided
1
<strings>
N
</strings>

# Number of statements
4

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
3 4 1 0 0 1
# e/i|  i |  N |  1  
   1    1    0    0    ## i >= 0
   1   -1    1    0    ## -i+N >= 0
   1    0    1    0    ## N >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
3 7 3 1 0 1
# e/i| c1   c2   c3 |  i |  N |  1  
   0   -1    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    ## c3 == 0

# ----------------------------------------------  1.3 Access
WRITE
2 6 2 1 0 1
# e/i| Arr  [1]|  i |  N |  1  
   0   -1    0    0    0    3    ## Arr == t
   0    0   -1    1    0    0    ## [1] == i

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
t = 0;
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
4

# ----------------------------------------------  2.1 Domain
DOMAIN
3 4 1 0 0 1
# e/i|  i |  N |  1  
   1    1    0    0    ## i >= 0
   1   -1    1    0    ## -i+N >= 0
   1    0    1    0    ## N >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
3 7 3 1 0 1
# e/i| c1   c2   c3 |  i |  N |  1  
   0   -1    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    1    ## c3 == 1

# ----------------------------------------------  2.3 Access
WRITE
2 6 2 1 0 1
# e/i| Arr  [1]|  i |  N |  1  
   0   -1    0    0    0    4    ## Arr == a
   0    0   -1    1    0    0    ## [1] == i

READ
2 6 2 1 0 1
# e/i| Arr  [1]|  i |  N |  1  
   0   -1    0    0    0    3    ## Arr == t
   0    0   -1    1    0    0    ## [1] == i

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
a[i] = t;
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
3

# ----------------------------------------------  3.1 Domain
DOMAIN
3 4 1 0 0 1
# e/i|  i |  N |  1  
   1    1    0    0    ## i >= 0
   1   -1    1    0    ## -i+N >= 0
   1    0    1    0    ## N >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
3 7 3 1 0 1
# e/i| c1   c2   c3 |  i |  N |  1  
   0   -1    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    0    ## c3 == 0

# ----------------------------------------------  3.3 Access
WRITE
2 6 2 1 0 1
# e/i| Arr  [1]|  i |  N |  1  
   0   -1    0    0    0    3    ## Arr == t
   0    0   -1    1    0    0    ## [1] == i

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
t = 0;
</body>

# =============================================== Statement 4
# Number of relations describing the statement:
4

# ----------------------------------------------  4.1 Domain
DOMAIN
3 4 1 0 0 1
# e/i|  i |  N |  1  
   1    1    0    0    ## i >= 0
   1   -1    1    0    ## -i+N >= 0
   1    0    1    0    ## N >= 0

# ----------------------------------------------  4.2 Scattering
SCATTERING
3 7 3 1 0 1
# e/i| c1   c2   c3 |  i |  N |  1  
   0   -1    0    0    0    0    1    ## c1 == 1
   0    0   -1    0    1    0    0    ## c2 == i
   0    0    0   -1    0    0    1    ## c3 == 1

# ----------------------------------------------  4.3 Access
WRITE
2 6 2 1 0 1
# e/i| Arr  [1]|  i |  N |  1  
   0   -1    0    0    0    5    ## Arr == b
   0    0   -1    1    0    0    ## [1] == i

READ
2 6 2 1 0 1
# e/i| Arr  [1]|  i |  N |  1  
   0   -1    0    0    0    3    ## Arr == t
   0    0   -1    1    0    0    ## [1] == i

# ----------------------------------------------  4.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
b[i] = t;
</body>

# =============================================== Extensions
<dependence>
# Number of dependences
5
# Description of dependence 1
# type
RAW #(flow)
# From source statement id
0
# To target statement id
1
# Depth 
1
# From source access ref
0
# To target access ref
1
# Dependence domain
UNDEFINED
13 9 3 3 0 1
# e/i| c1   c2   c3 | i1   i2   i3 | P1 |  1  
   1    1    0    0    0    0    0    0    0    ## c1 >= 0
   1   -1    0    0    0    0    0    1    0    ## -c1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   1    0    0    0    1    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    0    1    0    ## -i1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   0    0   -1    0    0    0    0    0    3    ## c2 == 3
   0    1    0   -1    0    0    0    0    0    ## c1-c3 == 0
   0    0    0    0    0    1    0    0   -3    ## i2-3 == 0
   0    0    0    0   -1    0    1    0    0    ## -i1+i3 == 0
   0    0   -1    0    0    1    0    0    0    ## c2 == i2
   0    0    0   -1    0    0    1    0    0    ## c3 == i3
   1   -1    0    0    1    0    0    0    0    ## -c1+i1 >= 0
# Description of dependence 2
# type
WAW #(output)
# From source statement id
0
# To target statement id
2
# Depth 
0
# From source access ref
0
# To target access ref
0
# Dependence domain
UNDEFINED
12 9 3 3 0 1
# e/i| c1   c2   c3 | i1   i2   i3 | P1 |  1  
   1    1    0    0    0    0    0    0    0    ## c1 >= 0
   1   -1    0    0    0    0    0    1    0    ## -c1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   1    0    0    0    1    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    0    1    0    ## -i1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   0    0   -1    0    0    0    0    0    3    ## c2 == 3
   0    1    0   -1    0    0    0    0    0    ## c1-c3 == 0
   0    0    0    0    0    1    0    0   -3    ## i2-3 == 0
   0    0    0    0   -1    0    1    0    0    ## -i1+i3 == 0
   0    0   -1    0    0    1    0    0    0    ## c2 == i2
   0    0    0   -1    0    0    1    0    0    ## c3 == i3
# Description of dependence 3
# type
RAW #(flow)
# From source statement id
0
# To target statement id
3
# Depth 
0
# From source access ref
0
# To target access ref
1
# Dependence domain
UNDEFINED
12 9 3 3 0 1
# e/i| c1   c2   c3 | i1   i2   i3 | P1 |  1  
   1    1    0    0    0    0    0    0    0    ## c1 >= 0
   1   -1    0    0    0    0    0    1    0    ## -c1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   1    0    0    0    1    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    0    1    0    ## -i1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   0    0   -1    0    0    0    0    0    3    ## c2 == 3
   0    1    0   -1    0    0    0    0    0    ## c1-c3 == 0
   0    0    0    0    0    1    0    0   -3    ## i2-3 == 0
   0    0    0    0   -1    0    1    0    0    ## -i1+i3 == 0
   0    0   -1    0    0    1    0    0    0    ## c2 == i2
   0    0    0   -1    0    0    1    0    0    ## c3 == i3
# Description of dependence 4
# type
WAR #(anti)
# From source statement id
1
# To target statement id
2
# Depth 
0
# From source access ref
1
# To target access ref
0
# Dependence domain
UNDEFINED
12 9 3 3 0 1
# e/i| c1   c2   c3 | i1   i2   i3 | P1 |  1  
   1    1    0    0    0    0    0    0    0    ## c1 >= 0
   1   -1    0    0    0    0    0    1    0    ## -c1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   1    0    0    0    1    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    0    1    0    ## -i1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   0    0   -1    0    0    0    0    0    3    ## c2 == 3
   0    1    0   -1    0    0    0    0    0    ## c1-c3 == 0
   0    0    0    0    0    1    0    0   -3    ## i2-3 == 0
   0    0    0    0   -1    0    1    0    0    ## -i1+i3 == 0
   0    0   -1    0    0    1    0    0    0    ## c2 == i2
   0    0    0   -1    0    0    1    0    0    ## c3 == i3
# Description of dependence 5
# type
RAW #(flow)
# From source statement id
2
# To target statement id
3
# Depth 
1
# From source access ref
0
# To target access ref
1
# Dependence domain
UNDEFINED
13 9 3 3 0 1
# e/i| c1   c2   c3 | i1   i2   i3 | P1 |  1  
   1    1    0    0    0    0    0    0    0    ## c1 >= 0
   1   -1    0    0    0    0    0    1    0    ## -c1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   1    0    0    0    1    0    0    0    0    ## i1 >= 0
   1    0    0    0   -1    0    0    1    0    ## -i1+P1 >= 0
   1    0    0    0    0    0    0    1    0    ## P1 >= 0
   0    0   -1    0    0    0    0    0    3    ## c2 == 3
   0    1    0   -1    0    0    0    0    0    ## c1-c3 == 0
   0    0    0    0    0    1    0    0   -3    ## i2-3 == 0
   0    0    0    0   -1    0    1    0    0    ## -i1+i3 == 0
   0    0   -1    0    0    1    0    0    0    ## c2 == i2
   0    0    0   -1    0    0    1    0    0    ## c3 == i3
   1   -1    0    0    1    0    0    0    0    ## -c1+i1 >= 0
</dependence>

<scatnames>
b0 i b1
</scatnames>

<arrays>
# Number of arrays
5
# Mapping array-identifiers/array-names
1 i
2 N
3 t
4 a
5 b
</arrays>

<coordinates>
# File name
./unitary/scalexp.c
# Starting line and column
4 0
# Ending line and column
12 0
# Indentation
0
</coordinates>

</OpenScop>


[33mDEPENDENCES GRAPH:[00m
digraph G {
# Data Dependence Graph
  S0 -> S1 [label=" RAW depth 1, ref 0->1 "];
  S0 -> S2 [label=" WAW depth 0, ref 0->0 "];
  S0 -> S3 [label=" RAW depth 0, ref 0->1 "];
  S1 -> S2 [label=" WAR depth 0, ref 1->0 "];
  S2 -> S3 [label=" RAW depth 1, ref 0->1 "];
# Number of edges = 5
}
